<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ruby on ebisen blog</title>
    <link>https://ebisenttt.github.io/blog/tags/ruby/</link>
    <description>Recent content in ruby on ebisen blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 03 Mar 2021 18:00:57 +0900</lastBuildDate><atom:link href="https://ebisenttt.github.io/blog/tags/ruby/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1章 | 初学者によるRuby on Rails Tutorial学習記録</title>
      <link>https://ebisenttt.github.io/blog/article/ruby_on_rails_tutorial_1/</link>
      <pubDate>Wed, 03 Mar 2021 18:00:57 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/article/ruby_on_rails_tutorial_1/</guid>
      <description>この記事では，プログラミング初学者によるRuby on Rails Tutorial学習中のつまずきを章別に共有します。一覧は次のページに用意しています。 はじめに | 初学者によるRuby on Rails Tutorial学習記録
1章の所感 1章については，まだつまずくことが少なかったです。Gemfileがまだブラックボックス化しているため，学習中に私が気になった点を一部補足しておきます。
Gemfile バージョン指定 Gemfileは使用するgemの種類やバージョンを使用するために作成するファイルです。その中で使用する&amp;gt;=や~&amp;gt;という記号について補足します。
バージョンの表記方法について まず，RubyやRailsに限らず，ソフトウェアのバージョンは
(メジャーバージョン).（マイナーバージョン）.（パッチバージョン） の形式で表記します。例えば，1.2.3というバージョンは，メジャーバージョンが1, マイナーバージョンが2, パッチバージョンが3であるバージョンを表します。 なお，メジャーバージョンは大きなアップデート，マイナーバージョンは小さなアップデート，パッチバージョンはバグの修正等があったときに更新されます。
&amp;gt;= 例えば
gem &amp;#39;sample&amp;#39;, &amp;#39;&amp;gt;= 1.2.3&amp;#39; はsampleというgemの1.2.3以上のバージョンを指定しています。つまり，存在するバージョンのうち1.2.3以降の最も新しいバージョン（例えば1.2.4や1.3.0など）が使用されます。
~&amp;gt; 例えば
gem &amp;#39;sample&amp;#39;, &amp;#39;~&amp;gt; 1.2.3&amp;#39; はsampleというgemのメジャーバージョンが1でマイナーバージョンが2以上のバージョン（例えば1.3.2など）を指定します。逆に言えば，メジャーバージョンが新しいもの（例えば2.1.3など）は使用されません。
bundle まずbundleとは，gemの依存関係（例えばgemAを使うにはgemBが必要というような関係）を管理するためのものです。ややこしいのはbundle自身もgemであるということです。様々なgemを使うにあたり，bundleがない状態では他のgemを管理できないため，まずは
gem install bundle でbundleをインストールします。その後，bundle以外の使いたいgemをGemfileに記述し，
bundle install でインストールします。
GemfileとGemfile.lock 作成したアプリケーションのディレクトリ直下にGemfileとGemfile.lockというファイルがあるはずです。これらの役割について補足します。まず，Gemfileは（前述の通り），作成するアプリケーションに使用したいgemの種類とバージョンを人間が記述するためのファイルです。一方でGemfile.lockは，作成するアプリケーションに使用したいgemの種類とバージョン，その依存関係をbundleがメモしておくためのファイルです。したがって，基本的には人間がGemfileを編集することはあっても，Gemfile.lockを編集することはありません。Gemfile.lockを更新する際は，
bundle update とします。 これまでの内容をまとめると，まず
gem install bundle \\bundleがインストールされる 次にGemfileを編集し，
bundle install \\Gemfileの内容に応じてgemがインストールされる bundle update \\Gemfileの内容に応じてGemfile.lockが更新される という流れです。</description>
    </item>
    
    <item>
      <title>はじめに | 初学者によるRuby on Rails Tutorial学習記録</title>
      <link>https://ebisenttt.github.io/blog/article/ruby_on_rails_tutorial_0/</link>
      <pubDate>Wed, 03 Mar 2021 17:01:50 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/article/ruby_on_rails_tutorial_0/</guid>
      <description>この記事の目的 この記事の目的は，「プログラミング初学者がRuby on Rails Tutorialで学習した際につまづいた点を記録し，共有すること」です。 Ruby on Rails Tutorialは日本語でとても丁寧に書かれた教材で，高く評価されています。しかしながら，初学者にとってはつまずくポイントがたくさんあります（つまずきながら学習して「熟練」を目指すことを想定されている教材であることは承知しています）。 特に，教材が作成されたあとにアップデートが入ったソフトウェアやGemのバージョン違いによるエラー，警告が大量に出ることがあります。私はそのエラー，警告を解消するために多くの時間を必要としました。 StackoverflowやGiuhubのissue，Qiitaなどで共有された情報を見ながら，初学者なりになんとか学習を続けられています。同じような状況にある方に少しでも貢献できたら幸いです。
学習環境 教材 Ruby on Rails on Tutorial 第6版
使用ハード Mac Book (Ratina, 12-inch, 2017)
使用ソフト Ruby 2.7.2 Rails 6.1.3 terminal vim 各章でのつまずき 学習済み 1章 2章 3章（執筆中） これから学習予定 4章 5章 6章 7章 8章 9章 10章 11章 12章 13章 14章 </description>
    </item>
    
  </channel>
</rss>
