<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ebisen blog</title>
    <link>https://ebisenttt.github.io/blog/</link>
    <description>Recent content on ebisen blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Sat, 12 Sep 2020 16:03:35 +0900</lastBuildDate>
    
        <atom:link href="https://ebisenttt.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>200911の学習</title>
      <link>https://ebisenttt.github.io/blog/article/200911/</link>
      <pubDate>Sat, 12 Sep 2020 16:03:35 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/article/200911/</guid>
      <description>この日はいつもより時間を作れました。 AtCoder過去問 B - String Rotation queueを使ってfrontをpopしたりpushしたりして解きました。自力AC。 B - Contest with Drinks Easy 全ての時間を足して，それぞれの時間を置き換えて出力を繰り返しました。自力AC。 A -</description>
    </item>
    
    <item>
      <title>200909の学習</title>
      <link>https://ebisenttt.github.io/blog/article/200909/</link>
      <pubDate>Sat, 12 Sep 2020 16:03:07 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/article/200909/</guid>
      <description>AtCoder過去問演習 A - Wanna go back home 場合分けが多かったので，できるだけシンプルに書きたいと思いましたが結局4つの場合に分けました。もっといい方法があるのか…。自力AC。</description>
    </item>
    
    <item>
      <title>200908の学習</title>
      <link>https://ebisenttt.github.io/blog/article/200908/</link>
      <pubDate>Sat, 12 Sep 2020 16:02:26 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/article/200908/</guid>
      <description>AtCoder過去問演習 B - AtCoDeerくんとボール色塗り Kをかけまくる問題。long longを使ったという点くらいです。自力AC。</description>
    </item>
    
    <item>
      <title>200907の学習</title>
      <link>https://ebisenttt.github.io/blog/article/200907/</link>
      <pubDate>Sat, 12 Sep 2020 16:01:17 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/article/200907/</guid>
      <description>AtCoder過去問演習 ### D - カード並べ next_permutationを使いました。自力AC。 ### A - おつり 10円忘れてました笑。自力AC。 phpとsql 業務で簡単な作業を頼まれたので初歩的なことから調べながらいじっていました。内容はエラー</description>
    </item>
    
    <item>
      <title>200906の学習</title>
      <link>https://ebisenttt.github.io/blog/article/200906/</link>
      <pubDate>Sat, 12 Sep 2020 16:00:31 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/article/200906/</guid>
      <description>AtCoder過去問演習 A - Darker and Darker 初期の黒マスを始点としてマンハッタン距離の最大値を出力する，回数を距離に置き換えるという発想がなかったです。解説AC。 C - 器物損壊！高橋君 前問のおかげで塀を壊すことをコスト1の移動に置き換えるという発想がで</description>
    </item>
    
    <item>
      <title>200902</title>
      <link>https://ebisenttt.github.io/blog/article/200902/</link>
      <pubDate>Fri, 04 Sep 2020 06:05:50 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/article/200902/</guid>
      <description>GoogleCalssroomの提出物を一括ダウンロードするプログラム作成 この日もGoogleAPIをいじってました。OAuthについてあまり知らなかったので認証周りで時間がかかってしまっています。 まだ完成しておらず時間があるので手作業でや</description>
    </item>
    
    <item>
      <title>200901の学習</title>
      <link>https://ebisenttt.github.io/blog/article/200901/</link>
      <pubDate>Fri, 04 Sep 2020 06:05:45 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/article/200901/</guid>
      <description>Google Classroomへの自動投稿アプリ作成 今日はAtCoderの過去問演習ではなく，GAS(Google Apps Script)でGoogle APIを使ったアプリを作っていました。言語はJavaScriptです。あまりJavaScriptに触ったこ</description>
    </item>
    
    <item>
      <title>200831の学習</title>
      <link>https://ebisenttt.github.io/blog/article/200831/</link>
      <pubDate>Fri, 04 Sep 2020 06:05:31 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/article/200831/</guid>
      <description>この日もあまり量は多くないですね。平日の習慣を見直そうと思います。 C - 100 to 105 C - Poll mapを使いました。各要素の個数を値として記録しましたが，値が最大の要素を出力する方法に悩みました。最終的には，最大値を記録しておいて，値が最大値に一致する要</description>
    </item>
    
    <item>
      <title>200830の学習</title>
      <link>https://ebisenttt.github.io/blog/article/200830/</link>
      <pubDate>Tue, 01 Sep 2020 04:35:21 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/article/200830/</guid>
      <description>この日は1日休みだったのでAtCoderだけでなくブログの環境整備もしてみました。 AtCoder過去問演習 まとまった時間が取れたので学習計画#1に基づいてアルゴリズム別に演習をしました。 C - たくさんの数式 bit全探索の問題。なかなか慣れない</description>
    </item>
    
    <item>
      <title>200829の学習</title>
      <link>https://ebisenttt.github.io/blog/article/200829/</link>
      <pubDate>Sun, 30 Aug 2020 17:47:26 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/article/200829/</guid>
      <description>この日は午前中は仕事だったので，夕方くらいから作業開始でした。週末なので，アルゴリズム別にAtCoderの過去問演習をしました。夜は外出したので量は多くないです。 A - 2点間距離の最大値 ( The longest distance ) 灰diffなのでなんなくAC B - Sum of Three Integers TLE</description>
    </item>
    
    <item>
      <title>Hugoで作ったブログ記事をGithubにdeployする</title>
      <link>https://ebisenttt.github.io/blog/article/hugo-tips/</link>
      <pubDate>Sun, 30 Aug 2020 17:01:12 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/article/hugo-tips/</guid>
      <description>はじめに このブログの記事作成の際は，Hugoで書いた記事をGithubPagesにデプロイしています。書いてからデプロイする作業が多少面倒だったので，これを簡単にする手順をまとめてみます。 これまでの手順 hugoで記事作成ができたら，下の手順</description>
    </item>
    
    <item>
      <title>ACチェックリスト-『AtCoder 版！蟻本 (初級編)』編</title>
      <link>https://ebisenttt.github.io/blog/article/arihonchecklist/</link>
      <pubDate>Sun, 30 Aug 2020 11:11:25 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/article/arihonchecklist/</guid>
      <description>定期的にAtCoderのABCに参加しています。過去問を網羅的に番号順で演習していましたが，なかなかアルゴリズムの理解が深まらず，実装することも慣れないなぁと思っていました。そこで，最近はアルゴリズム別に演習する方針に切り替えました。 参考に</description>
    </item>
    
    <item>
      <title>200828の学習</title>
      <link>https://ebisenttt.github.io/blog/article/200828/</link>
      <pubDate>Sat, 29 Aug 2020 12:56:25 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/article/200828/</guid>
      <description>AtCoder Group Contest greater&amp;lt;&amp;gt;でsortしてから2個飛ばしで足して行きました。何度かWAしましたが単純な書き間違えでした。 数を3つ選ぶマン 「A+D+Eじゃん簡単〜。」って思ってたらWAくらいました(笑)解説ACです。</description>
    </item>
    
    <item>
      <title>200827の学習</title>
      <link>https://ebisenttt.github.io/blog/article/200827/</link>
      <pubDate>Sat, 29 Aug 2020 06:25:00 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/article/200827/</guid>
      <description>この日はあまり量をこなせませんでした。 町の合併 最初に人数の合計を求めてから，過半数を超えている町があるか判定する。該当する町が複数あるようなテストケースは与えられない？ Multiplication 2 何度かTLEし諦めて解説AC。オーバーフローしないような工夫が必要な</description>
    </item>
    
    <item>
      <title>200825の学習</title>
      <link>https://ebisenttt.github.io/blog/article/200825/</link>
      <pubDate>Thu, 27 Aug 2020 21:33:54 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/article/200825/</guid>
      <description>Ringo&amp;rsquo;s Favorite Numbers N=100のときの例外処理をしなければいけない事にしばらく気付けず。dとNの値をループさせて全ての計算結果を表示させたことで気づいた。ストレステストを素早くできるような環境構築が必要？ Multiplication 2 未だACせず。桁数が大きくなってしまうのでそこ</description>
    </item>
    
    <item>
      <title>200826の学習</title>
      <link>https://ebisenttt.github.io/blog/article/200826/</link>
      <pubDate>Thu, 27 Aug 2020 21:32:08 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/article/200826/</guid>
      <description>この日は22時からzoom会議があったので，時間がある割には演習できなかった。積極的に時間を作りたい。 直方体 Dividing String 問題文の意図は汲み取れたが，どうもそのように読み取れない。Twitterでフォロワーの方にも補足頂いた。しかし「存在する」の部分</description>
    </item>
    
    <item>
      <title>学習計画#1</title>
      <link>https://ebisenttt.github.io/blog/article/studyplan1/</link>
      <pubDate>Wed, 26 Aug 2020 18:58:25 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/article/studyplan1/</guid>
      <description>AtCoder 平日 現レート相当の問題を数問 AtCoderProblemsのRecommendationにて 難易度Moderate Don’t exclude solved problems で設定した時に表示される問題を数問解く。 これまでは夏期休暇で時間を取れる日が多かったが，今後毎日ABCのC問</description>
    </item>
    
    <item>
      <title>Link List</title>
      <link>https://ebisenttt.github.io/blog/article/linklist/</link>
      <pubDate>Wed, 19 Aug 2020 13:16:13 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/article/linklist/</guid>
      <description>このサイトの制作や競技プログラミングの過去問演習に参考にしたサイトを載せておきます。 DFS (深さ優先探索) 超入門！ 〜 グラフ・アルゴリズムの世界への入口 〜【前編】 特に幅優先探索と深さ優先探索の違いについてわかりやすくまとめている。 VISUALGO.NET アルゴリズムを</description>
    </item>
    
    <item>
      <title>ABC016-C</title>
      <link>https://ebisenttt.github.io/blog/code/abc016c/</link>
      <pubDate>Wed, 19 Aug 2020 12:09:33 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/code/abc016c/</guid>
      <description>問題 AtCoder ABC016 C 感想 とりあえずグラフを作ればいいことは分かったが，どう実装していいのか悩んだ。 考えた結果，以前「ワーシャルフロイド法」を使ったことを思い出した。 各頂点について，距離が2である別の頂点がいくつかあるか確かめれば良い。 公式解説も同じ趣</description>
    </item>
    
    <item>
      <title>ABC015-C</title>
      <link>https://ebisenttt.github.io/blog/code/abc015c/</link>
      <pubDate>Wed, 19 Aug 2020 07:27:47 +0900</pubDate>
      
      <guid>https://ebisenttt.github.io/blog/code/abc015c/</guid>
      <description>AtCoder茶色を目指し，練習のためABCのC問題を全問AC，解説ACすることがとりあえずの目標。 今回はABC015のC問題を解いてみた。 問題 AtCoder ABC015 C 感想 まず排他的論理和（XOR）をまともに勉強していなかったのでそこから。 さらに可変長配列の</description>
    </item>
    
  </channel>
</rss>
